# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-10-11 04:30
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import seahub.base.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DTableAPIToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(db_index=True, max_length=255)),
                ('token', models.CharField(max_length=40, unique=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.CharField(max_length=255)),
                ('last_access', models.DateTimeField(auto_now=True)),
                ('permission', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'dtable_api_token',
            },
        ),
        migrations.CreateModel(
            name='DTableFormLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=255)),
                ('workspace_id', models.IntegerField(db_index=True)),
                ('dtable_uuid', models.CharField(db_index=True, max_length=36)),
                ('form_id', models.CharField(max_length=36)),
                ('token', models.CharField(max_length=36, unique=True)),
            ],
            options={
                'db_table': 'dtable_form_links',
            },
        ),
        migrations.CreateModel(
            name='DTableRowShares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=255)),
                ('workspace_id', models.IntegerField(db_index=True)),
                ('dtable_uuid', models.CharField(db_index=True, max_length=36)),
                ('table_id', models.CharField(max_length=36)),
                ('row_id', models.CharField(db_index=True, max_length=36)),
                ('token', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'dtable_row_shares',
            },
        ),
        migrations.CreateModel(
            name='DTables',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('creator', models.CharField(max_length=255)),
                ('modifier', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'dtables',
            },
        ),
        migrations.CreateModel(
            name='DTableShare',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('from_user', models.CharField(db_index=True, max_length=255)),
                ('to_user', models.CharField(db_index=True, max_length=255)),
                ('permission', models.CharField(max_length=15)),
                ('dtable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtable.DTables')),
            ],
            options={
                'db_table': 'dtable_share',
            },
        ),
        migrations.CreateModel(
            name='DTableShareLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', seahub.base.fields.LowerCaseCharField(db_index=True, max_length=255)),
                ('token', models.CharField(max_length=100, unique=True)),
                ('ctime', models.DateTimeField(default=datetime.datetime.now)),
                ('password', models.CharField(max_length=128, null=True)),
                ('expire_date', models.DateTimeField(null=True)),
                ('permission', models.CharField(choices=[('r', 'read only'), ('rw', 'read and write')], db_index=True, default='r', max_length=50)),
                ('dtable', models.ForeignKey(db_column='dtable_id', on_delete=django.db.models.deletion.CASCADE, to='dtable.DTables')),
            ],
            options={
                'db_table': 'dtable_share_links',
            },
        ),
        migrations.CreateModel(
            name='Workspaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('owner', models.CharField(max_length=255, unique=True)),
                ('repo_id', models.CharField(max_length=36, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'workspaces',
            },
        ),
        migrations.AddField(
            model_name='dtables',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtable.Workspaces'),
        ),
        migrations.AlterUniqueTogether(
            name='dtableformlinks',
            unique_together=set([('dtable_uuid', 'form_id')]),
        ),
        migrations.AddField(
            model_name='dtableapitoken',
            name='dtable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtable.DTables'),
        ),
        migrations.AlterUniqueTogether(
            name='dtableshare',
            unique_together=set([('dtable', 'to_user')]),
        ),
        migrations.AlterUniqueTogether(
            name='dtables',
            unique_together=set([('workspace', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='dtableapitoken',
            unique_together=set([('dtable', 'app_name')]),
        ),
    ]
